type Product {
  _id: String!
  name: String!
  description: String!
  price: Int!
  image: String!
  quantityLeft: Int!
}

input CheckoutProductInput {
  _id: String!
  name: String!
  description: String!
  price: Int!
  image: String!
  quantityLeft: Int!
  quantitySelected: Int!
  inCart: Int!
  onWaitList: Int!
}

type CartProduct {
  _id: String!
  name: String!
  description: String!
  price: Int!
  image: String!
  quantityLeft: Int!
  quantitySelected: Int!
  inCart: Int!
  onWaitList: Int!
}

type OverOrderedProduct {
  _id: String!
  name: String!
  image: String!
  defaultWaitlistQty: Int!
  confirmed: Int!
  price: Int!
}

input OverOrderedProductInput {
  _id: String!
  name: String!
  image: String!
  defaultWaitlistQty: Int!
  confirmed: Int!
  price: Int!
}

input AddressInput {
  address: String!
  apartment: String
  city: String!
  zip: String!
}

type CheckoutResponse {
  success: Boolean!
  adjustedCart: [CartProduct!]!
  overOrderedProducts: [OverOrderedProduct!]!
}

type PaymentAndConfirmation {
  success: Boolean!
  confirmation: String!
  userEmail: String!
}

type Query {
  products: [Product!]!
}

type Mutation {
  checkout(cart: [CheckoutProductInput!]!): CheckoutResponse!
  updateWaitList(waitList: [OverOrderedProductInput!]!): MutationResponse!
  addAddress(address: AddressInput!): MutationResponse!
  addDeliveryDate(date: String!, time: String!): MutationResponse!
  addPaymentAndConfirmOrder(payment: String!): PaymentAndConfirmation!
}
